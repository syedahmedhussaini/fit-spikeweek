mixin input(label, type, name, inputState, errorMessage)

  .input-group(class!=attributes.class)
    label(for=name class= inputState ==="error" ? "text-red" : "text-80")= label
    .relative.block
      input.input-field.px-3.py-3.text-lg(type=type id=name name=name class= inputState ==="error" ? "bg-fit-red-lightest error" : "bg-fit-grey-5")
      i.opacity-0.fa.fa-times-circle-o.text-xl.text-blue.pin-y.pin-r.absolute.clear-field.cursor-pointer.mt-4.mr-2

    if block
      block
    if inputState === 'error'
      p.text-red.text-xs.my-1.leading-normal= errorMessage


mixin floatingLabelInput(label, type, name, inputState, errorMessage)
  .input-field.floating-label.inactive(class= inputState ==="error" ? "error" : "")
    label(for=name)= label
    .relative.block
      input(type=type id=name name=name)
      i.fa.fa-times-circle-o.text-xl.text-blue.pin-y.pin-r.absolute.clear-field.cursor-pointer(class='-mt-2')
      

  if block
    block
  if inputState === 'error'
    p.text-red.text-xs.my-1.leading-normal.error-message= errorMessage



mixin select(label, name, inputState)
  .input-group
    label(for=name class= inputState ==="error" ? "text-red" : "text-80")= label
    .relative.block
      select.input-field.select-input-field.px-3.py-3.text-lg.pr-8.appearance-reset(id=name name=name)
        option Select
        block
      .pointer-events-none.absolute.pin-y.pin-r.flex.items-center.px-2(for=name class= inputState ==="error" ? "text-red" : "text-40")
        svg.fill-current.h-4.w-4(xmlns='http://www.w3.org/2000/svg', viewbox='0 0 20 20')
          path(d='M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z')
    if inputState === 'error'
      p.text-red.text-sm.my-1.leading-normal 
        = label
        |   must be selected.

mixin floatingSelect(label, name, inputState)
  .bg-white.border-fit-grey-10.border.rounded-lg.px-3.py-1.shadow-inner(class='hover:border-fit-blue hover:no-shadow')
    label.text-xs(for=name class= inputState ==="error" ? "text-red" : "text-80")= label
    .relative.block
      select.bg-transparent.pb-2.text-lg.pr-8.w-full.appearance-reset(id=name name=name)
        option Select
        block
      i.fa.fa-angle-down.text-xl.text-blue.pin-y.pin-r.absolute.pointer-events-none(class='-mt-2')


    if inputState === 'error'
      p.text-red.text-sm.my-1.leading-normal 
        = label
        |   must be selected.

        


mixin radio-question(question, name, options)
  fieldset.mb-6(role=radiogroup)
    legend.mb-3.leading-normal= question
    each option in options
      label.block.leading-normal(role=radio)
        input.mb-2.mr-2(type="radio" name=name value=option)
        span.text-80.text-sm= option

mixin checkbox(title, label, name)
  label.block.ml-5.mb-6.leading-normal(for=name)
    input.float-left.-ml-5.mt-1(type="checkbox" id=name name=name)
    span.block.font-bold.text-80.mb-1.mr-1.leading-tight.text-sm
      = title
    span.block.text-80.leading-normal.text-sm
      = label

mixin password-validations(validations)
  each validation in validations
    .password-checkbox.mt-2
      input.hidden(type="checkbox" id=validation.id checked=validation.active)
      span.inline-block.h-3.w-3.border.border-fit-grey-dark.rounded-lg.-mb-px.relative
        i.hidden.fa.fa-check.text-green.text-sm.absolute
      label.text-xs.text-80= validation.title
