mixin input(label, type, name, inputStyle, inputState, errorMessage)
  if inputStyle === 'floating'
    .input-field.floating-label.inactive(class= inputState ==="error" ? "error" : "")
      label(for=name)= label
      .relative.block
        input(type=type id=name name=name)
        i.fa.fa-times-circle-o.text-xl.text-blue.pin-y.pin-r.absolute.clear-field.cursor-pointer(class='-mt-2')
        

    if inputState === 'error'
      p.text-red.text-xs.my-1.leading-normal.error-message= errorMessage
    
    else
      if block
        block

  else
    .input-group(class!=attributes.class)
      label(for=name class= inputState ==="error" ? "text-red" : "text-80")= label
      .relative.block
        input.input-field.px-3.py-3.text-lg(type=type id=name name=name class= inputState ==="error" ? "bg-red-10 error" : "bg-grey-25")
        if name === 'password'
          span.opacity-0.text-xs.pin-y.pin-r.absolute.show-password.cursor-pointer.mt-4.mr-4.uppercase.text-blue.font-bold Show
        else
          i.opacity-0.fa.fa-times-circle-o.text-xl.text-blue.pin-y.pin-r.absolute.clear-field.cursor-pointer.mt-4.mr-2


      if inputState === 'error'
        p.text-red.text-xs.my-1.leading-normal= errorMessage
      
      else
        if block
          block

mixin select(label, name, inputStyle, inputState)
  if inputStyle === 'floating'
    .bg-white.border-fit-grey-10.border.rounded-lg.px-3.py-1.shadow-inner(class='hover:border-blue hover:no-shadow')
      label.text-xs(for=name class= inputState ==="error" ? "text-red" : "text-80")= label
      .relative.block
        select.bg-transparent.pb-2.text-lg.pr-8.w-full.appearance-reset(id=name name=name)
          option Select
          block
        i.fa.fa-angle-down.text-xl.text-blue.pin-y.pin-r.absolute.pointer-events-none(class='-mt-2')

    if inputState === 'error'
      p.text-red.text-xs.my-1.leading-normal 
        = label
        |   must be selected.


  else
    .input-group
      label(for=name class= inputState ==="error" ? "text-red" : "text-80")= label
      .relative.block
        select.input-field.select-input-field.px-3.py-3.text-lg.pr-8.appearance-reset(id=name name=name)
          option Select
          block

        i.fa.fa-angle-down.text-xl.text-blue.pin-y.pin-r.absolute.pointer-events-none.my-3.mx-2

      if inputState === 'error'
        p.text-red.text-xs.my-1.leading-normal 
          = label
          |   must be selected.

mixin radio-question(question, name, options)
  fieldset.mb-6(role=radiogroup)
    legend.mb-3.leading-normal= question
    each option in options
      label.radio-item.block.leading-normal.flex.items-center.mb-1(role=radio)
        input.appearance-reset(type="radio" name=name value=option)
        span.radio.inline-block.h-5.w-5.border.rounded-full.border-blue.mr-3.flex-center
          span.hidden.h-3.w-3.bg-blue.rounded-full
        span.text-80.text-sm= option

mixin checkbox(title, label, name)
  label.block.checkbox-item.ml-8.mb-6.leading-normal(for=name)
    input.appearance-reset.float-left(type="checkbox" id=name name=name)
    span.checkbox.float-left.-ml-8.w-5.h-5.mt-1.border.border-dashed.rounded-sm.border-blue.flex-center
      i.hidden.fa.fa-check.text-80.text-white
    span.block.font-bold.text-80.leading-tight.text-sm
      = title
    span.block.text-80.leading-normal.text-sm
      = label

mixin password-validations(validations)
  each validation in validations
    .password-checkbox.mt-1
      input.appearance-reset(type="checkbox" id=validation.id checked=validation.active)
      span.inline-block.h-3.w-3.border.border-grey.rounded-full.-mb-px.relative
        i.hidden.fa.fa-check.text-green.text-sm.absolute
      label.text-xs.text-80.pointer-events-none(for=validation.id)= validation.title
